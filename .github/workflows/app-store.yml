name: App Store Deployment (Raw)

on:
  # workflow_run:
  #   workflows: ["Test"]
  #   types:
  #     - completed
  #   branches: [main]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    name: Build and Deploy
    runs-on: macos-latest
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    env:
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clean workspace
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData/*
          rm -rf ./**/xcuserdata
          rm -rf ./**/*.xcodeproj/project.xcworkspace/xcuserdata
          rm -rf ./**/*.xcodeproj/xcuserdata
          rm -rf build/

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Node dependencies
        run: npm ci

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Import Certificate
        env:
          DEVELOPMENT_CERTIFICATE_BASE64: ${{ secrets.DEVELOPMENT_CERTIFICATE_BASE64 }}
          DISTRIBUTION_CERTIFICATE_BASE64: ${{ secrets.DISTRIBUTION_CERTIFICATE_BASE64 }}
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
          KEYCHAIN_PASSWORD: temporary
          IOS_APP_PROFILE_BASE64: ${{ secrets.IOS_APP_PROFILE_BASE64 }}
          IOS_EXT_PROFILE_BASE64: ${{ secrets.IOS_EXT_PROFILE_BASE64 }}
          MACOS_APP_PROFILE_BASE64: ${{ secrets.MACOS_APP_PROFILE_BASE64 }}
          MACOS_EXT_PROFILE_BASE64: ${{ secrets.MACOS_EXT_PROFILE_BASE64 }}
        run: |
          # Create keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security set-keychain-settings -t 3600 -l build.keychain

          # Import development certificate
          echo $DEVELOPMENT_CERTIFICATE_BASE64 | base64 --decode > development.p12
          security import development.p12 -k build.keychain -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          rm development.p12

          # Import distribution certificate
          echo $DISTRIBUTION_CERTIFICATE_BASE64 | base64 --decode > distribution.p12
          security import distribution.p12 -k build.keychain -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          rm distribution.p12

          # Create provisioning profiles directories
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          mkdir -p ~/Library/Developer/Xcode/UserData/Provisioning\ Profiles

          # Install iOS App Store profiles
          echo "$IOS_APP_PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/Braver_Search_iOS_App_Store.mobileprovision
          echo "$IOS_EXT_PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/Braver_Search_iOS_Extension_App_Store.mobileprovision
          
          # Also install in new Xcode location
          echo "$IOS_APP_PROFILE_BASE64" | base64 --decode > ~/Library/Developer/Xcode/UserData/Provisioning\ Profiles/Braver_Search_iOS_App_Store.mobileprovision
          echo "$IOS_EXT_PROFILE_BASE64" | base64 --decode > ~/Library/Developer/Xcode/UserData/Provisioning\ Profiles/Braver_Search_iOS_Extension_App_Store.mobileprovision

          # Install macOS App Store profiles
          echo "$MACOS_APP_PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/Braver_Search_macOS_App_Store.provisionprofile
          echo "$MACOS_EXT_PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/Braver_Search_macOS_Extension_App_Store.provisionprofile
          
          # Also install in new Xcode location
          echo "$MACOS_APP_PROFILE_BASE64" | base64 --decode > ~/Library/Developer/Xcode/UserData/Provisioning\ Profiles/Braver_Search_macOS_App_Store.provisionprofile
          echo "$MACOS_EXT_PROFILE_BASE64" | base64 --decode > ~/Library/Developer/Xcode/UserData/Provisioning\ Profiles/Braver_Search_macOS_Extension_App_Store.provisionprofile

          # Set permissions
          sudo chown -R $USER:staff ~/Library/MobileDevice/Provisioning\ Profiles/
          sudo chown -R $USER:staff ~/Library/Developer/Xcode/UserData/Provisioning\ Profiles/

          # List installed profiles for debugging
          echo "Listing profiles in MobileDevice directory:"
          ls -la ~/Library/MobileDevice/Provisioning\ Profiles/
          echo "Listing profiles in Xcode directory:"
          ls -la ~/Library/Developer/Xcode/UserData/Provisioning\ Profiles/

          # Update keychain search list
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" build.keychain

      - name: Set up App Store Connect API
        env:
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_KEY_ISSUER_ID: ${{ secrets.APPLE_API_KEY_ISSUER_ID }}
          APPLE_API_PRIVATE_KEY: ${{ secrets.APPLE_API_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.appstoreconnect/private_keys
          echo "$APPLE_API_PRIVATE_KEY" > ~/.appstoreconnect/private_keys/AuthKey_${APPLE_API_KEY_ID}.p8

      - name: Build iOS App
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          # Archive
          xcodebuild archive \
            -project "Braver Search/Braver Search.xcodeproj" \
            -scheme "Braver Search (iOS)" \
            -configuration Release \
            -archivePath build/ios/BraverSearch.xcarchive \
            -destination "generic/platform=iOS" \
            -allowProvisioningUpdates \
            DEVELOPMENT_TEAM="$APPLE_TEAM_ID" \
            CODE_SIGN_STYLE=Manual \
            CODE_SIGN_IDENTITY="Apple Distribution" \
            "Braver Search (iOS):PROVISIONING_PROFILE_SPECIFIER=Braver Search iOS App Store" \
            "Braver Search Extension (iOS):PROVISIONING_PROFILE_SPECIFIER=Braver Search iOS Extension App Store" \
            OTHER_CODE_SIGN_FLAGS="--keychain build.keychain" \
            ENABLE_BITCODE=NO

          # Create exportOptions.plist for iOS
          cat > exportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>app-store</string>
              <key>teamID</key>
              <string>$APPLE_TEAM_ID</string>
              <key>signingStyle</key>
              <string>manual</string>
              <key>provisioningProfiles</key>
              <dict>
                  <key>xyz.bsquared.Braver-Search</key>
                  <string>Braver Search iOS App Store</string>
                  <key>xyz.bsquared.Braver-Search.Extension</key>
                  <string>Braver Search iOS Extension App Store</string>
              </dict>
          </dict>
          </plist>
          EOF

          # Export IPA
          xcodebuild -exportArchive \
            -archivePath build/ios/BraverSearch.xcarchive \
            -exportPath build/ios \
            -exportOptionsPlist exportOptions.plist \
            -allowProvisioningUpdates

      - name: Build macOS App
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          # Archive
          xcodebuild archive \
            -project "Braver Search/Braver Search.xcodeproj" \
            -scheme "Braver Search (macOS)" \
            -configuration Release \
            -archivePath build/macos/BraverSearch.xcarchive \
            -destination "generic/platform=macOS" \
            -allowProvisioningUpdates \
            DEVELOPMENT_TEAM="$APPLE_TEAM_ID" \
            CODE_SIGN_STYLE=Manual \
            CODE_SIGN_IDENTITY="Apple Distribution" \
            "Braver Search (macOS):PROVISIONING_PROFILE_SPECIFIER=Braver Search macOS App Store" \
            "Braver Search Extension (macOS):PROVISIONING_PROFILE_SPECIFIER=Braver Search macOS Extension App Store" \
            OTHER_CODE_SIGN_FLAGS="--keychain build.keychain"

          # Create exportOptions.plist for macOS
          cat > exportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>app-store</string>
              <key>teamID</key>
              <string>$APPLE_TEAM_ID</string>
              <key>signingStyle</key>
              <string>manual</string>
              <key>provisioningProfiles</key>
              <dict>
                  <key>xyz.bsquared.Braver-Search</key>
                  <string>Braver Search macOS App Store</string>
                  <key>xyz.bsquared.Braver-Search.Extension</key>
                  <string>Braver Search macOS Extension App Store</string>
              </dict>
          </dict>
          </plist>
          EOF

          # Export APP
          xcodebuild -exportArchive \
            -archivePath build/macos/BraverSearch.xcarchive \
            -exportPath build/macos \
            -exportOptionsPlist exportOptions.plist \
            -allowProvisioningUpdates

      - name: Upload to TestFlight
        env:
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_KEY_ISSUER_ID: ${{ secrets.APPLE_API_KEY_ISSUER_ID }}
        run: |
          # Upload iOS build
          xcrun altool --upload-app --type ios \
            --file "build/ios/BraverSearch.ipa" \
            --apiKey "$APPLE_API_KEY_ID" \
            --apiIssuer "$APPLE_API_KEY_ISSUER_ID"
          
          # Upload macOS build
          xcrun altool --upload-app --type osx \
            --file "build/macos/BraverSearch.app" \
            --apiKey "$APPLE_API_KEY_ID" \
            --apiIssuer "$APPLE_API_KEY_ISSUER_ID" 

      - name: Clean up secrets
        if: always()
        run: |
          rm -f ~/.appstoreconnect/private_keys/AuthKey_${APPLE_API_KEY_ID}.p8